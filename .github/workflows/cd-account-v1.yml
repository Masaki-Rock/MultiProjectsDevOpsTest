name: MuleSoft CD account-v1 process script

# Trigger settings
on:
  workflow_dispatch:
    inputs:
      org:
        description: 'Deploy Environment.'
        required: false
        default: 'アクセンチュア'
      env:
        description: 'Deploy Bussines group.'
        required: false
        default: 'Sandbox'
      type:
        description: 'Specify Woker size.'
        required: false
        default: 'Micro'
      artifact:
        description: 'Specify Deployment file name.'
        required: false
        default: 'account-v1-0.0.1.jar'

# Job settings
jobs:
  # build script
  application-release:
    runs-on: ubuntu-latest
    env:
      PROJECT_HOME : '../../account-v1'
      BRUANCH : main
      WORK_DIR : account-v1
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Echo input parameter.
        run: |
          echo "The Business Group ID is ${{ github.event.inputs.org }}"
          echo "The Environment is ${{ github.event.inputs.env }}"
      
      - name: Download deployment file.
        id: download
        run: |
          echo "::set-output name=FILE_NAME::$(java -jar app.jar -download -token ${{ secrets.GITHUB_TOKEN }} -config ${{ env.PROJECT_HOME }} -branch ${{ env.BRUANCH }})"
        shell: bash
        working-directory: .github/script
        
      - name: Download deployment file by artifact.
        id: download
        if: ${{ github.event.inputs.org != null && github.event.inputs.org != '' }}
        run: |
          echo "::set-output name=FILE_NAME::$(java -jar app.jar -download -token ${{ secrets.GITHUB_TOKEN }} -config ${{ env.PROJECT_HOME }} -branch ${{ env.BRUANCH }})"
        shell: bash
        working-directory: .github/script
        
      - name: Deploy to specified environment.
        run: mvn mule:deploy -Dmule.artifact=${{ format('../.github/script/{0}', steps.download.outputs.FILE_NAME) }} -DbusinessGroup=${{ github.event.inputs.org }} -Denvironment=${{ github.event.inputs.env }} -DworkerType=${{ github.event.inputs.type }}
        shell: bash
        working-directory: ${{ env.WORK_DIR }}